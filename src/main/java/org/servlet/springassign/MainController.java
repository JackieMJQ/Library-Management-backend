package org.servlet.springassign;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@SpringBootApplication
@RestController
@RequestMapping(path="/v1") // This means URL's start with /demo (after Application path)

public class MainController {

    public static final String USER = "/users";

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data

    private UserRepository userRepository;

    @GetMapping(path = USER)
    public @ResponseBody
    Iterable<User> getAllUser() {
        return userRepository.findAll();
    }

    @GetMapping(path = USER + "/{id}")
    public @ResponseBody
    Optional<User> getUserWithId(@PathVariable Integer id) {
        return userRepository.findById(id);
    }

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        User n = new User();
        n.setName(name);
        n.setEmail(email);
        userRepository.save(n);
        return "Saved";
    }


    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    public static void main(String[] args) {
        SpringApplication.run(SpringAssignApplication.class, args);
    }
}